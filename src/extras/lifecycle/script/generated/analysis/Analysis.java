/* This file was generated by SableCC (http://www.sablecc.org/). */

package extras.lifecycle.script.generated.analysis;

import extras.lifecycle.script.generated.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAScript(AScript node);
    void caseASingleStatementSequence(ASingleStatementSequence node);
    void caseAStatementSequenceTail(AStatementSequenceTail node);
    void caseAAssignStatement(AAssignStatement node);
    void caseAExpressiononlyStatement(AExpressiononlyStatement node);
    void caseAExpression(AExpression node);
    void caseASingleExpression(ASingleExpression node);
    void caseAFunctionExpression(AFunctionExpression node);
    void caseAArgument(AArgument node);
    void caseAArgumentTail(AArgumentTail node);
    void caseAIdentifierValueExpression(AIdentifierValueExpression node);
    void caseADecimalIntegerLiteralValueExpression(ADecimalIntegerLiteralValueExpression node);
    void caseAStringLiteralValueExpression(AStringLiteralValueExpression node);
    void caseADecimalIntegerLiteral(ADecimalIntegerLiteral node);

    void caseTComment(TComment node);
    void caseTWhiteSpace(TWhiteSpace node);
    void caseTLeftParenthesis(TLeftParenthesis node);
    void caseTRightParenthesis(TRightParenthesis node);
    void caseTEq(TEq node);
    void caseTComma(TComma node);
    void caseTSemicolon(TSemicolon node);
    void caseTDecimalNumeral(TDecimalNumeral node);
    void caseTIdentifier(TIdentifier node);
    void caseTStringLiteral(TStringLiteral node);
    void caseEOF(EOF node);
}
