package animal.editor.graphics.meta;import animal.editor.Editor;import animal.main.Animation;import animal.misc.ColorChooserAction;import animal.misc.XProperties;import translator.TranslatableGUIElement;import javax.swing.*;import java.awt.*;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;public abstract class AbstractImageEditor extends GraphicEditor implements ActionListener {    private static final long serialVersionUID = 1L;    protected JTextField imagePathField;    protected ColorChooserAction ColorChooser;    public Box generateImagePathOperationsBox(TranslatableGUIElement generator, String borderKey) {        Box imagePathEntryBox = generator.generateBorderedBox(BoxLayout.PAGE_AXIS, borderKey);        // switch to path selector        // textfield only for testing purpose rn        imagePathField = new JTextField(16);        imagePathField.addActionListener(this);        imagePathEntryBox.add(imagePathField);        return imagePathEntryBox;    }    public void createImagePathOperations(String borderKey) {        // insert the properly labeled separator        insertSeparator(borderKey, cp, generator);        // add a text input field        imagePathField = new JTextField(16);        imagePathField.addActionListener(this);        cp.add(imagePathField, Editor.LAYOUT_PARAGRAPH_GAP_GROWX_SPAN_WRAP);    }    public void createImageComponentChooser(Color initialColor, String colorName) {        initializeLayoutComponents();        // add color choice        insertSeparator("textColorBL", cp, generator);        ColorChooser = createColorChooser(colorName,                "GenericEditor.chooseColor", "AbstractImageEditor.color",                initialColor);    }    public void getProperties(XProperties props) {        super.getProperties(props);        String baseKey = getBasicType();        props.put(baseKey + ".imagepath", imagePathField.getText());    }    public void setProperties(XProperties props) {        super.setProperties(props);        String baseKey = getBasicType();        if (imagePathField != null) {            imagePathField.setText(props.getProperty(baseKey + ".imagepath", ""));        }    }    public void actionPerformed(ActionEvent e) {        super.actionPerformed(e);        repaintNow();        if (Animation.get() != null) {            Animation.get().doChange();        }    }}