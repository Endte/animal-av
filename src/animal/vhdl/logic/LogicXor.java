package animal.vhdl.logic;
/** <br>
 * 
 *
 * @author Lu,Zheng
 * @version 1.0
 */
public class LogicXor extends LogicGate{

	private static Character[][] and_table=
	{{LOGIC_UNINITIALIZED,LOGIC_UNINITIALIZED,LOGIC_UNINITIALIZED,LOGIC_UNINITIALIZED,LOGIC_UNINITIALIZED,LOGIC_UNINITIALIZED,LOGIC_UNINITIALIZED,LOGIC_UNINITIALIZED,LOGIC_UNINITIALIZED},
	 {LOGIC_UNINITIALIZED,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN},
	 {LOGIC_UNINITIALIZED,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_LOW,LOGIC_STRONG_HIGH,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_LOW,LOGIC_STRONG_HIGH,LOGIC_STRONG_UNKNOWN},
	 {LOGIC_UNINITIALIZED,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_HIGH,LOGIC_STRONG_LOW,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_HIGH,LOGIC_STRONG_LOW,LOGIC_STRONG_UNKNOWN},
	 {LOGIC_UNINITIALIZED,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN},
	 {LOGIC_UNINITIALIZED,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN},
	 {LOGIC_UNINITIALIZED,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_LOW,LOGIC_STRONG_HIGH,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_LOW,LOGIC_STRONG_HIGH,LOGIC_STRONG_UNKNOWN,},
	 {LOGIC_UNINITIALIZED,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_HIGH,LOGIC_STRONG_LOW,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_HIGH,LOGIC_STRONG_LOW,LOGIC_STRONG_UNKNOWN,},
	 {LOGIC_UNINITIALIZED,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN,LOGIC_STRONG_UNKNOWN}};
	public LogicXor(char [] inputList){
		logicResult='1';
		int coordinateAnd[]=new int [2];
		if (inputList.length<2){
			Exception nis=new Exception("Xor-Gate have less than two Input");
			try {
				throw nis;
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}		
		else{
			for(int i=0;i<inputList.length;i++){
				coordinateAnd=findResult(logicResult,inputList[i]);
				logicResult=and_table[coordinateAnd[0]][coordinateAnd[1]];
		}
		}

}
}
