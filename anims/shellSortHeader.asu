{
text "f1-01" "Shell Sort" at (120,50) color black font SansSerif size 32 bold
}
{
text "f1-02a" "Das Verfahren Sortieren durch Einfuegen ist langsam, weil es Elemente" at (20,100) color black font SansSerif size 24
text "f1-02b" "immer nur um eine Position nach rechts verschiebt.                   " at (20,130) color black font SansSerif size 24
}
{
text "f1-03a" "Shellsort versucht, Elemente durch größere Spruenge schneller an die " at (20,170) color black font SansSerif size 24
text "f1-03b" "Zielposition zu bringen                                              " at (20,200) color black font SansSerif size 24
}
{
text "f1-04a" "Dabei werden die Daten in jedem Schritt h-sortiert. Eine Datenfolge  " at (20,240) color black font SansSerif size 24
text "f1-04b" "ist dabei h-sortiert, wenn man bei Entnahme jedes h-ten Elements ab  " at (20,270) color black font SansSerif size 24
text "f1-04c" "einem beliebigen Startelement immer eine sortierte Folge erhaelt     " at (20,300) color black font SansSerif size 24
}
{
text "f1-05a" "Eine h-sortierte Datenfolge besteht daher aus h unabhängig sortierten" at (20,340) color black font SansSerif size 24
text "f1-05b" "Datenfolgen, die einander ueberlagern                                " at (20,370) color black font SansSerif size 24
}
{
text "f1-06a" "Das Vorgehen von Shellsort ist dabei, dass die Datenfolge sortiert   " at (20,410) color black font SansSerif size 24
text "f1-06b" "wird, indem mit abnehmenden h mehrere h-Sortierungen ausgeführt      " at (20,440) color black font SansSerif size 24
text "f1-06c" "werden, wobei am Schluss eine Sortierung mit h=1 erfolgt             " at (20,470) color black font SansSerif size 24
}
{
text "f1-07a" "Die Folge zu verwendeter Werte für h wird dabei als Inkrementfolge   " at (20,510) color black font SansSerif size 24
text "f1-07b" "bezeichnet                                                           " at (20,540) color black font SansSerif size 24
}
{
hideAll
}
{
text "f2-01" "Der Algorithmus in Worten" at (120,50) color black font SansSerif size 32 bold
}
{
text "f2-02a" "Es hat sich gezeigt, dass die Folge h[i+1]=3*h[i]+1 guenstige         " at (20,100) color black font SansSerif size 24
text "f2-02b" "Eigenschaften hat. Mit ihr laesst sich der Algorithmus wie folgt      " at (20,130) color black font SansSerif size 24
text "f2-02c" "anpassen:                                                             " at (20,160) color black font SansSerif size 24
}
{
text "f2-03" "1. Solange h<=n/9, setze h=3*h+1                                      " at (20,200) color black font SansSerif size 24
}
{
text "f2-04" "2. Setze i=h                                                          " at (20,240) color black font SansSerif size 24
}
{
text "f2-05a" "3. Speichere Element a[i] in einer Variablen v, und speichere i in    " at (20,280) color black font SansSerif size 24
text "f2-05b" "    einer Variablen j                                                 " at (20,310) color black font SansSerif size 24
}
{
text "f2-06" "4. Solange j>h ist und a[j-h]>v, setze a[j]=a[j-h] und j=j-h          " at (20,350) color black font SansSerif size 24
}
{
text "f2-07" "5. Setze a[j]=v                                                       " at (20,390) color black font SansSerif size 24
}
{
text "f2-08" "6. Zähle i um eins hoch. Falls i<n, fahre fort mit Schritt 3          " at (20,430) color black font SansSerif size 24
}
{
text "f2-09" "7. Setze h=h/3 (Integer-Division). Falls h>0, fahre fort mit Schritt 2" at (20,470) color black font SansSerif size 24
}
